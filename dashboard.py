# -*- coding: utf-8 -*-
"""dashboard.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1796DU3G7BHXk9awlnOFBbRkfPr41GUtq
"""

# !pip install streamlit babel

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
from babel.numbers import format_currency

sns.set(style='dark')
st.header('Analisa Data E-Commerce')

def create_monthly_orders_df(df):
    # Convert the index to DatetimeIndex
    df['order_purchase_timestamp'] = pd.to_datetime(df['order_purchase_timestamp'])
    df = df.set_index('order_purchase_timestamp')

    # Resample by month and calculate the number of unique orders
    monthly_orders_df = df.resample(rule='M').agg({
        "order_id": "nunique"
    })

    # Reset the index and rename the columns
    monthly_orders_df = monthly_orders_df.reset_index()
    monthly_orders_df.rename(columns={"order_id": "order_count"}, inplace=True)

    return monthly_orders_df

def create_bycity_df(df):
    bycity_df = df.groupby(by="customer_city").customer_id.nunique().reset_index()
    bycity_df.rename(columns={"customer_id": "customer_count", "customer_city": "city"}, inplace=True)
    return bycity_df

all_df = pd.read_csv("https://raw.githubusercontent.com/Sipa02/Proyek_analisis_data/main/Dataset/data.csv")

from datetime import datetime, timedelta
all_df['order_purchase_timestamp'] = pd.to_datetime(all_df['order_purchase_timestamp'])

end_date = max(all_df['order_purchase_timestamp'])
start_date = end_date - timedelta(days=90)

filtered_orders_last_3_months = all_df[(all_df['order_purchase_timestamp'] >= start_date) & (all_df['order_purchase_timestamp'] <= end_date)]

# monthly_orders_df = create_monthly_orders_df(all_df)
last_3_months_df = all_df[all_df['order_purchase_timestamp'] >= start_date]
bycity_df = create_bycity_df(all_df)

# Tampilkan subheader
st.subheader('Number of Orders Comparison: Last 3 Months vs Previous 3 Months')

# Pisahkan layout menjadi 3 kolom
col1, col2, col3 = st.columns(3)

# Kolom pertama: Total pesanan 3 bulan sebelumnya
with col1:
    total_orders_previous_3_months = len(all_df[(all_df['order_purchase_timestamp'] < start_date)])
    st.metric("Total orders (Previous 3 Months)", value=total_orders_previous_3_months, delta=None)

# Kolom kedua: Total pesanan 3 bulan terakhir
with col2:
    total_orders_last_3_months = len(filtered_orders_last_3_months)
    st.metric("Total orders (Last 3 Months)", value=total_orders_last_3_months, delta=None)

# Kolom ketiga: Persentase perubahan pesanan
with col3:
    percentage_increase = ((total_orders_last_3_months - total_orders_previous_3_months) / total_orders_previous_3_months) * 100
    st.metric("Percentage Change", value=percentage_increase, delta=None)

# Tampilkan grafik historis pesanan

#     all_df["order_purchase_timestamp"],
#     all_df["order_id"],
#     marker='o',
#     linewidth=2,
#     color="#87CEEB"
# )

# ax.tick_params(axis='y', labelsize=20)
# ax.tick_params(axis='x', labelsize=15)

# st.pyplot(fig)
# st.line_chart(last_3_months_df.set_index('order_purchase_timestamp')['order_id'])
# st.pyplot(fig)
chart_data = {
    'Time Period': ['Last 3 Months', 'Previous 3 Months'],
    'Order Quantity': [total_orders_last_3_months, total_orders_previous_3_months]
}
chart_df = pd.DataFrame(chart_data)

st.bar_chart(chart_df.set_index('Time Period'))

# customer demographic
st.subheader("Customer Demographics")

# Top 5 cities with the most users
fig, ax = plt.subplots(figsize=(20, 10))

top_cities_df = bycity_df.nlargest(5, 'customer_count')

colors = ["#90CAF9", "#D3D3D3", "#D3D3D3", "#D3D3D3", "#D3D3D3", "#D3D3D3", "#D3D3D3", "#D3D3D3"]

sns.barplot(x="customer_count",
            y="city",
            data=top_cities_df,
            palette=colors,
            ax=ax
            )
ax.set_title("Number of Customer in Top 5 Cities", loc="center", fontsize=30)
ax.set_ylabel('City')
ax.set_xlabel('')
ax.set_title("Top 5 Cities", loc="center", fontsize=50)
ax.tick_params(axis='y', labelsize=20)
ax.tick_params(axis='x', labelsize=15)

st.pyplot(fig)